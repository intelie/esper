<?xml version="1.0" encoding="UTF-8"?><!-- We use a no xsi:noNamespaceSchemaLocation rather than the following to ensure we use the xsd from the codebase    rather than the published one    [esper-configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns="http://www.espertech.com/schema/esper"        xsi:schemaLocation="    http://www.espertech.com/schema/esper http://www.espertech.com/schema/esper/esper-configuration-2.0.xsd"]--><esper-configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    xmlns="http://www.espertech.com/schema/esper"    xsi:noNamespaceSchemaLocation="../esper-configuration-4-0.xsd">    <event-type-auto-name package-name="com.mycompany.eventsone"/>    <event-type-auto-name package-name="com.mycompany.eventstwo"/>	<event-type name="MySampleEventOne" class="com.mycompany.myapp.MySampleEventOne"/>	<event-type name="MySampleEventTwo" class="com.mycompany.myapp.MySampleEventTwo"/>	<event-type name="MyNoSchemaXMLEventName">		<xml-dom root-element-name="MyNoSchemaEvent" >			<xpath-property property-name="element1" xpath="/myevent/element1" type="number"/>		</xml-dom>	</event-type>	 	<event-type name="MySchemaXMLEventName"> 		<xml-dom root-element-name="MySchemaEvent" root-element-namespace="samples:schemas:simpleSchema" schema-resource="MySchemaXMLEvent.xsd" schema-text="actual-xsd-text-here"				default-namespace="default-name-space" xpath-resolve-properties-absolute="false" xpath-property-expr="true"				xpath-function-resolver="com.mycompany.OptionalFunctionResolver" 				xpath-variable-resolver="com.mycompany.OptionalVariableResolver"				event-sender-validates-root="false"				auto-fragment="false"				start-timestamp-property-name="startts" end-timestamp-property-name="endts"> 			<namespace-prefix prefix="ss" namespace="samples:schemas:simpleSchema"/> 			<xpath-property property-name="element2" xpath="/myevent/element2" type="string" cast="long"/>			<xpath-property property-name="element3" xpath="/bookstore/book" type="nodeset" event-type-name="MyOtherXMLNodeEvent"/> 		</xml-dom>	</event-type>		<event-type name="MyMapEvent">		<java-util-map supertype-names="MyMapSuperType1, MyMapSuperType2" start-timestamp-property-name="startts" end-timestamp-property-name="endts">		  	<map-property name="myInt" class="int"/>	  		<map-property name="myString" class="string"/>	  	</java-util-map>	</event-type>		<event-type name="MyLegacyTypeEvent" class="com.mycompany.package.MyLegacyTypeEvent">		<legacy-type accessor-style="public" code-generation="enabled" property-resolution-style="case_insensitive" factory-method="com.mycompany.myapp.MySampleEventFactory.createMyLegacyTypeEvent" copy-method="myCopyMethod" start-timestamp-property-name="startts" end-timestamp-property-name="endts">			<method-property name="mymethodprop" accessor-method="myAccessorMethod" />			<field-property name="myfieldprop" accessor-field="myFieldName" />					</legacy-type>	</event-type>    <!-- Sample for an event type name configuration that handles event updates (aka. versions, revisions) -->	<revision-event-type name="MyRevisionEvent" property-revision="merge_non_null">	  <base-event-type name="MyBaseEventName"/>	  <delta-event-type name="MyDeltaEventNameOne"/>	  <delta-event-type name="MyDeltaEventNameTwo"/>	  <key-property name="id"/>	  <key-property name="id2"/>	</revision-event-type>		<variant-stream name="MyVariantStream" type-variance="any">	  <variant-event-type name="MyEvenTypetNameOne"/>	  <variant-event-type name="MyEvenTypetNameTwo"/>	</variant-stream>		<auto-import import-name="com.mycompany.myapp.*"/>	<auto-import import-name="com.mycompany.myapp.ClassOne"/>	    <method-reference class-name="abc">		<expiry-time-cache max-age-seconds="91" purge-interval-seconds="92.2" ref-type="weak"/>    </method-reference> 	    <method-reference class-name="def">		<lru-cache size="20"/>    </method-reference> 	<database-reference name="mydb1">		<datasource-connection context-lookup-name="java:comp/env/jdbc/mydb">			<env-property name="java.naming.factory.initial" value ="com.myclass.CtxFactory"/>			<env-property name="java.naming.provider.url" value ="iiop://localhost:1050"/>		</datasource-connection>		<connection-lifecycle value="pooled"/>		<lru-cache size="10"/>		<column-change-case value="lowercase"/>		<metadata-origin value="sample" />		<sql-types-mapping sql-type="2" java-type="int" />		<sql-types-mapping sql-type="6" java-type="float" />	</database-reference>		<database-reference name="mydb2">		<drivermanager-connection class-name="my.sql.Driver" url="jdbc:mysql://localhost" user="myuser1" password="mypassword1">			<connection-arg name="user" value ="myuser2"/>			<connection-arg name="password" value ="mypassword2"/>			<connection-arg name="somearg" value ="someargvalue"/>		</drivermanager-connection>		<connection-settings auto-commit="false" catalog="test" read-only="true" transaction-isolation="3" />			<connection-lifecycle value="retain"/>		<expiry-time-cache max-age-seconds="60.5" purge-interval-seconds="120.1" ref-type="hard"/>		<column-change-case value="uppercase"/>		<metadata-origin value="metadata" />		<sql-types-mapping sql-type="99" java-type="java.lang.String" />	</database-reference>	<database-reference name="mydb3">		<datasourcefactory-connection class-name="org.apache.commons.dbcp.BasicDataSourceFactory">			<env-property name="username" value ="myusername"/>			<env-property name="password" value ="mypassword"/>			<env-property name="driverClassName" value ="com.mysql.jdbc.Driver"/>			<env-property name="url" value ="jdbc:mysql://localhost/test"/>			<env-property name="initialSize" value ="2"/>		</datasourcefactory-connection>		<connection-lifecycle value="pooled"/>	</database-reference>	<plugin-view namespace="ext0" name="myview0" factory-class="com.mycompany.MyViewFactory0" />	<plugin-view namespace="ext1" name="myview1" factory-class="com.mycompany.MyViewFactory1" />	<plugin-virtualdw namespace="vdw0" name="myvdw0" factory-class="com.mycompany.MyVdwFactory0" />	<plugin-virtualdw namespace="vdw1" name="myvdw1" factory-class="com.mycompany.MyVdwFactory1" config="abc" />	<plugin-aggregation-function name="func1" function-class="com.mycompany.MyMatrixAggregationMethod0" />	<plugin-aggregation-function name="func2" function-class="com.mycompany.MyMatrixAggregationMethod1" />	<plugin-singlerow-function name="func3" function-class="com.mycompany.MyMatrixSingleRowMethod0" function-method="method1" />	<plugin-singlerow-function name="func4" function-class="com.mycompany.MyMatrixSingleRowMethod1" function-method="method2" />	<plugin-pattern-guard namespace="ext0" name="guard1" factory-class="com.mycompany.MyGuardFactory0"/>	<plugin-pattern-guard namespace="ext1" name="guard2" factory-class="com.mycompany.MyGuardFactory1"/>	<plugin-pattern-observer namespace="ext0" name="observer1" factory-class="com.mycompany.MyObserverFactory0" />	<plugin-pattern-observer namespace="ext1" name="observer2" factory-class="com.mycompany.MyObserverFactory1" />		<plugin-event-representation uri="type://format/rep/name" class-name="com.mycompany.MyPlugInEventRepresentation">	  <initializer>	    <anyxml>test string event rep init</anyxml>	  </initializer>	</plugin-event-representation>		<plugin-event-representation uri="type://format/rep/name2" class-name="com.mycompany.MyPlugInEventRepresentation2"/>	<plugin-event-type name="MyEvent">	  <resolution-uri value="type://format/rep"/>	  <resolution-uri value="type://format/rep2"/>	  <initializer>	    <anyxml>test string event type init</anyxml>	  </initializer>	</plugin-event-type>	<plugin-event-type name="MyEvent2">	  <resolution-uri value="type://format/rep2"/>	</plugin-event-type>	<plugin-event-type-name-resolution>	  <resolution-uri value="type://format/rep"/>	  <resolution-uri value="type://format/rep2"/>	</plugin-event-type-name-resolution>	<variable name="var1" type="int" initialization-value="1"/>	<variable name="var2" type="string"/>	<plugin-loader name="Loader1" class-name="com.espertech.esper.support.plugin.SupportLoaderOne">		<init-arg name="name1" value="val1"/>		<init-arg name="name2" value="val2"/>		<config-xml>			<sample-initializer><some-any-xml-can-be-here>This section for use by a plugin loader.</some-any-xml-can-be-here></sample-initializer>		</config-xml>	</plugin-loader>	<plugin-loader name="Loader2" class-name="com.espertech.esper.support.plugin.SupportLoaderTwo" />		<engine-settings>		<defaults>			<threading>				<listener-dispatch preserve-order="false" timeout-msec="2000" locking="suspend"/>				<insert-into-dispatch preserve-order="false" timeout-msec="3000" locking="suspend"/>				<internal-timer enabled="false" msec-resolution="1234567"/>				<threadpool-inbound enabled="true" num-threads="1" capacity="1000"/>				<threadpool-outbound enabled="true" num-threads="2" capacity="1500" />				<threadpool-timerexec enabled="true" num-threads="3"/>				<threadpool-routeexec enabled="true" num-threads="4" capacity="2000"/>			</threading>			<event-meta>				<class-property-resolution style="distinct_case_insensitive" accessor-style="public"/>			</event-meta>			<view-resources>				<share-views enabled="false"/>				<allow-multiple-expiry-policy enabled="true"/>			</view-resources>			<logging>				<execution-path enabled="true"/>				<query-plan enabled="true"/>				<timer-debug enabled="false"/>				<jdbc enabled="true"/>			</logging>			<variables>				<msec-version-release value="30000"/>			</variables>			<stream-selection>				<stream-selector value="irstream" />			</stream-selection>			<time-source>				<time-source-type value="nano" />			</time-source>			<metrics-reporting enabled="true" engine-interval="4000" statement-interval="500" threading="false">				<stmtgroup name="MyStmtGroup" interval="5000" default-include="true"  num-stmts="50" report-inactive="true">				    <!-- samples of include/exclude using RegEx and SQL-Like syntax -->					<include-regex>.*</include-regex>					<exclude-regex>.*test.*</exclude-regex>					<exclude-like>%MyMetricsStatement%</exclude-like>					<include-like>%MyFraudAnalysisStatement%</include-like>					<include-like>%SomerOtherStatement%</include-like>				</stmtgroup>				<stmtgroup name="MyStmtGroupTwo" interval="200"/>			</metrics-reporting>			<language sort-using-collator="true"/>			<expression integer-division="true" division-by-zero-is-null="true" udf-cache="false" self-subselect-preeval="false" extended-agg="false" ducktyping="true"/>			<execution prioritized="true" fairlock="true"/>			<exceptionHandling>				<handlerFactory class="my.company.cep.LoggingExceptionHandlerFactory"/>				<handlerFactory class="my.company.cep.AlertExceptionHandlerFactory"/>			</exceptionHandling>			<conditionHandling>				<handlerFactory class="my.company.cep.LoggingConditionHandlerFactory"/>				<handlerFactory class="my.company.cep.AlertConditionHandlerFactory"/>			</conditionHandling>		</defaults>	</engine-settings>	</esper-configuration>