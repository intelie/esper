News

* February 16, 2008  -  Esper 2.0.0  and  NEsper 1.12.0 Beta 1

  The Esper release 2.0 makes certain changes to the API and engine output that are not backwards-compatible to release 1 engines. 
  The changes were required to strategically address usability, consistency, performance and aspects of how we publish the project.

  Please read through the summary below. We have outlined in detail the changes that are not backwards compatible on the Wiki at 
  {{{http://docs.codehaus.org/display/ESPER/Migrating+Esper+1.x+to+Esper+2.x}Migrating Esper 1.x to Esper 2.x}}
  
  Please see below for NEsper 1.12 beta-1 release details.
  
  * New strongly-typed and fast output event delivery to subscriber objects via method call
  
  * Performance improvement: statements without listeners or subscriber (iterator or output-snapshot statements that use insert-into) now compute much faster
  
  * We have upgraded to ANTLR Version 3 to gain excellent error handling, incremental parsing, easy-to-read grammar and a smaller runtime jar
  
  * We have changed view parameter syntax such that event properties do no longer need to appear in quotes
  
  * Added support for nano/microsecond timer resolution (ESPER-191)
  
  * Added API for setting variable values (ESPER-181)
  
  * Added support for map return types in from-clause method invocations
  
  * Added support for a "unidirectional" keyword in joins/outer join to control join direction
  
  * Added support for multiple event properties in unique view (std:unique)
  
  * Added support for use of aggregation functions in subselect
  
  * Fixed issue ESPER-136 Improve error messages when encountering reserved keywords
  
  * Fixed issue ESPER-138 Allow Map event type to contain nested Map values
  
  * Fixed issue ESPER-145 Ignore start or stop commands on already started or stopped EPStatements.
  
  * Fixed issue ESPER-178 Problem selecting "sum" as a property of event posted by stat:uni view
  
  * Fixed issue ESPER-179 Iterator on select statement selecting from a named window may return incomplete results  
  
  * Fixed issue ESPER-180 Null aggregation results outer joining a named window on filled named window
  
  * Fixed issue ESPER-183 Replace LinkedLists with ArrayDeque where possible
  
  * Fixed issue ESPER-184 NPE when using regexp or like on null pojo properties
  
  * Fixed issue ESPER-185 Remove limitation whereas grouped-by properties cannot also occur within aggregation functions  
  
  * Fixed issue ESPER-186 Iterator not honoring order by clause for grouped join query with output-rate clause
  
  * Fixed issue ESPER-187 Join of two or more named windows on late start may not return correct aggregation state on iterate
  
  * Fixed issue ESPER-188 Output snapshot buffers events until output condition is reached
  
  * Fixed issue ESPER-188 Output snapshot buffers events until output condition is reached
  
  * Fixed issue ESPER-192 Support non-String type auto-discovery in EsperIO
  
  * Fixed issue ESPER-194 Nullpointer when using Jcl104-over-slf4j
  
  * Fixed issue ESPER-195 Not considering having-clause in un-aggregated and un-grouped query (no-join only)
  
  []   


* February 16, 2008  -  NEsper for .NET 1.12.0 Beta 1

  * Feature equivalent with Esper 1.12.0
  
  * Improved support for SQL and database access
  
  * Includes benchmark kits
  
  []


* December 15, 2007  -  Esper 1.12.0
    
	* New feature: Named windows

	  * Share data windows between statements

	  * New create-window syntax to create named windows

	  * Define entry criteria via insert-into

	  * Define exit criteria via the new on-delete syntax

	  * Perform on-demand queries using the new on-select syntax

	* New feature: Variables

	  * New create-variable syntax declares a variable

	  * Variables can occur in any expression

	  * A variable can occur in an output-rate limit to dynamically control output rate

	  * Update variables via the new on-set syntax

	  * The engine makes consistency and atomicity guarantees

	* New multi-policy tumbling window (ESPER-165)

	* New time-ordering window for more flexibility in handling out-of-order events (ESPER-147)

	* New accumulating time-based data window (ESPER-166)

	* New 'snapshot' keyword for the output rate limiting clause for outputting full statement state

	* New safe iterator to provide a concurrent-safe pull API (ESPER-172)

	* Support for method invocations in the from-clause; For example to query a distributed, object database or web service

	* Support for iterator and safe iterator to iterate over joins and outer joins (ESPER-173)

	* Support for stream-wildcard "stream.*" selections for more flexibility selecting from joins and patterns (ESPER-174)

	* Support for the stream name or pattern tag name as a valid property in expressions, returning the underlying event for the stream

	* Support for instance method calls on stream or pattern events that are Java objects

	* Support for indexing of cached result sets of SQL poll queries and method invocations

	* Support for expiry time cache backed by soft-reference Map and hard-reference map (ESPER-167)

	* Support for an unmatched event listener that receives a callback if an event matches no statement (ESPER-160)

	* Support for JDK5 enum classes natively (ESPER-13)

	* Support for constants (public static final fields) in expressions

	* Performance improvements: rewritten insert-into and listener thread blocking techniques for reliable ordered delivery, other changes

	* API change: AggregationSupport for plug-in aggregation functions now requires an implementation of the clear() method
	
	* Fixed issue ESPER-125 IllegalStateException in a self-joining statement without join condition using sorted window

	* Fixed issue ESPER-177 Deadlock in EPRuntimeImpl.sendEvent

	* Fixed issue ESPER-176 NullPointerException for grouped-by length view and previous operator

	* Fixed issue ESPER-175 ArrayIndexOutOfBoundsException when no event posted 

	* Fixed issue ESPER-171 AutoID example in Sun JDK6 fails with Invalid schema error (a JDK6 compatibility issue)

	* New example: Java Messaging Service (JMS) server shell 

	  * demonstrates a multi-threaded JMS server 

	  * with dynamic statement management using Java Management Extensions (JMX)

	* Documentation improvements


* September 23, 2007  -  NEsper for .NET 1.10.0 Beta 1

    * Feature-equivalent to Esper 1.10.0
    
    * Includes NEsperIO as a port of EsperIO 1.10.0
    
    * Addition of database support to NEsper via ADO.NET and ODBC
    
    * Addition of parameter style support do address quirks in the ADO.NET parameter model
    
    * Addition of dynamic code generation to access properties and fields
            
    []


* September 15, 2007  -  Esper 1.11.0

    * Support for statement object model (ESPER-108)
    
  		* allows to build, change or interrogate an object-oriented representation of a statement
  		
  		* round-trip between EPL and object model
  		
  		[]
    
    * Support for precompiled statements and substitution parameters (ESPER-50, ESPER-31)
    
    * Support for dynamic (unchecked) properties; Support for instanceof and cast (ESPER-135)
    
    * Support for the StatementStopCallback to deliver events raised by plug-in views (ESPER-158)
    
    * Support for automatic bean aliases by specifying imported packages (ESPER-149)
    
    * New "current_timestamp" reserved keyword returns the current engine time (ESPER-144)
    
    * API provides timestamp of last state change in EPStatement (ESPER-144)
    
    * Fixed issue ESPER-129 "DOM expects a Document, no error checking if not"
    
    * Fixed issue ESPER-131 "Namespace problem using XML events and XPath properties"
    
    * Fixed issue ESPER-134 "EPException using std:groupby without child view"
    
    * Fixed issue ESPER-142 "Relational Database Access does not work with Oracle JDBC"
    
    * Fixed issue ESPER-159 "Two patterns with similar filters cause duplicates reported by one pattern"
    
    * Fixed issue ESPER-155 "BeanEventType fails on write only property"
    
    []


* July 18, 2007  -  Esper 1.10.0

	* Support for a new statement-aware listener interface (ESPER-113)
	
	* Support for case-insensitive Java-class event property names (ESPER-103)
	
	* Fixed issue ESPER-112 "Pattern problem in 'every' operator not restarting a permanently false sub-expression"
	
	* Fixed issue ESPER-114 "Allow equals operator on object types in expressions"
	
	* Fixed issue ESPER-115 "NullPointerException using iterator on pattern without window"
	
	* Fixed issue ESPER-118 "NullPointerException when select * and additional fields"
	
	* Fixed issue ESPER-121 "Filter expression not evaluating correctly after optimization and using multiple pattern subexpression results"
	
	* Fixed issue ESPER-122 "IllegalArgumentException in a join statement between same-typed map-underlying events"
	
	* Fixed issue ESPER-124 "IllegalStateException in a grouped time window using the prior function"
	
	* Fixed issue ESPER-126 "Allow null statement name for createPattern"
	
	* Documentation improvements
	
	* Performance improvement when running engine without log4j configuration


* June 13, 2007  -  <<New!>> NEsper for .NET  -- NEsper 1.3.0 Final   

	* The .NET version is feature-equivalent to Esper version 1.3
	
	* Database joins not yet supported


* June 6, 2007  -  Esper 1.9.0

	* Support for last-day-of-month and weekday for timer:at crontab functions (ESPER-84)

	* Support for subqueries to the return event object (ESPER-105)

	* Additional documentation on grouping and aggregation (output model chapter)
	
	* Additional documentation on threading and concurrency (API chapter)

	* Improvements to multi-threaded processing:
	
   		* Deliver events to listeners in a predictable order
   		
   		* Deterministic in processing events between statements that consume other statement's events via insert-into

	* New example out of the RFID domain featuring a Swing GUI and a simulator

	* Fixed issue ESPER-98 "NullPointerException for Joins involving Map event types"

	* Fixed issue ESPER-99 "IllegalStateException combining a time window with min/max and group-by and output every"

	* Fixed issue ESPER-101 "ArrayIndexOutOfBounds with 'output last' and group by"

	* Fixed issue ESPER-107 "Memory leak using previous function and length window under a group"

	* Fixed issue ESPER-109 "NPE while fetching events from statements"

	* Fixed issue ESPER-110 "Iterator not honoring filter, aggregation, group-by and having clause"


* April 28, 2007  -  <<New!>> NEsper for .NET  -- NEsper 1.3.0 Beta 1   

	* The .NET version is feature-equivalent to Esper version 1.3
	
	* Database joins not yet supported


* April 22, 2007  -  Esper 1.8.0

    * Support for subqueries including the exists and subquery-in syntax (ESPER-22 support for subqueries)
    
    * Support for plug-in user-defined aggregation methods, and plug-in pattern observer and pattern guard objects (ESPER-40) 
    
    * Fixed issue ESPER-93 "Improve error handling parsing too large Integer numbers and remove L suffix requirement for Long"
    
    * Fixed issue ESPER-94 "Performance degradation for certain statement between 1.4 and 1.5 of 25%"
    
    * Fixed issue ESPER-96 "Cache result of user-defined functions when parameter set is constants"


* March 17, 2007  -  Esper 1.7.0

	* Support for free-form filter expressions (User-defined filter functions ESPER-77, Pattern Filter - null value support ESPER-17, ESPER-91)

	* New JMS input and output adapter based on Spring JMS templates (ESPER-4, ESPER-8, ESPER-7)

	* Support for adding new event type aliases and Map and DOM event types during runtime (ESPER-87)

	* New statement management API (ESPER-90)

	* Allow literal keywords to be case insensitive (ESPER-89)

	* More helpful error messages when invalid syntax (ESPER-82)

	* Support for plugging-in a custom-developed view (ESPER-41)

	* Fixed issue ESPER-86 "selecting first element via prev and count(*)"

	* Fixed issue ESPER-92 "String with parantheses not parsing in static method arg"


* February 17, 2007  -  Esper 1.6.0

    * Added support for group-by and previous (ESPER-80 Prev function to consider grouped windows)
    
    * Added length window batch (ESPER-27 jumping/tumbling window)
    
    * Added support for array definition (Enhancement Request ESPER-76 Java array initialization syntax for constants)
    	
    * Removed dependency on Apache Common BeanUtils (commons-beanutils-1.7.0.jar)
    
    * Documentation - Output model illustrations for time windows and event model; Extensive description of built-in views

    * Fixed issue ESPER-78 "Insert-into streams not using correct event type when same-typed streams"


* January 11, 2007  -  Esper 1.5.0

    * Multithread-safety for all operations provided by the administrative and runtime API. Client applications can perform multithreaded sends of events into the engine as well as create, start and stop statements during operation, while retaining full control over threading and efficiently sharing resources between statements (Enhancement Request ESPER-48 Multithread-safety)
    
    * Documentation - new chapter explaining the output model

    * Fixed issue ESPER-75 "PropertyAccessException selecting individual fields from a group-by with sub-ordinate length window"


* December 26, 2006  -  Esper 1.4.0  and  EsperIO 1.4.0

    * New Esper Input Adapter API named EsperIO for reading CSV (comma-separated value format) files 
      and running event simulations from timestamped CSV files (ESPER-6 Input Adapter for reading CSV files)
    
    * Added support for 'prior' and 'prev' (previous) operator (Enhancement request ESPER-25)
    
    * Added support for 'in' and 'not in' list-of-value matching in filter expressions, 
      and for 'between' and 'not between' keywords, and 'not in' ranges (Enhancement request ESPER-66)
      
    * Added support for modifying events in a stream, i.e. wildcard and expressions combined in a select-clause and insert into (Enhancement request ESPER-67)
    	    
    * Fixed issue ESPER-69 "Pull throws UnsupportedOperationException for statement not selecting wildcard"
    
    * Fixed issue ESPER-68 "Followed-by operator not releasing memory for dead sub-expressions"

    * Various documentation enhancements and performance tuning changes


* November 14, 2006  -  Esper 1.3.0 

    * Added support for SQL queries within EPL (Enhancement request ESPER-30)
      Also provides a LRU and expiry-time-based caches for your SQL queries.     

    * Added support for regular expressions (regexp) and SQL 'like' (Enhancement request ESPER-65)


* October 26, 2006  -  Esper 1.2.0 

	Esper has change it's license and is now available under {{{http://www.opensource.org/licenses/gpl-license.php}GNU General Public License (GPL)}}
	(prior releases 1.1 and earlier remain available under the LGPL license).


* October 26, 2006  -  Esper 1.2.0 update (licensed GPL)

    * NOTE: The following pattern elements now take seconds (not milliseconds) as a parameter (fixes ESPER-52) : 
               timer:within, timer:interval, win:ext_time

    * Added new syntax for specifying time periods; Example: <<<timer:within(1 min 5 sec)>>> is equivalent to <<<timer:within(65)>>>

    * Added support for 'in' and 'between' standard SQL keywords	
    
    * Added support EventType adaptors for legacy Java classes (Enhancement request ESPER-55)
    
    * Added support for != (not equals) in filter expressions (Enhancement request ESPER-63)
    
    * Added support for select-clause istream and rstream keywords (Enhancement request ESPER-54)
	
    * Fixed issue ESPER-52 "EPL windows take seconds parameter while patterns take milliseconds parameter"
    
    * Fixed issue ESPER-58 "IllegalMonitorStateException logged by engine"
    
    * Added J2EE example (Enhancement request ESPER-64)
    
    * Added docs for "How does one use emit" (Enhancement request ESPER-62)
	
    []

* September 19, 2006  -  Esper 1.1.0 update (licensed LGPL)

    * Added support for pattern expressions in EPL statements (Enhancement request ESPER-53 Consuming pattern-generated events in EPL)

    * Added 'case' control flow function

    * Added 'coalesce' comparison function

    * Bug fixes to reported issues (see history)
	
    []
    

* August 21, 2006  -  Esper 1.0.5 update

    * Added support for the "first" keyword in output rate limiting for outputting only the first matching event for an interval
    
    * Added support for XML events represented by a document object model (DOM) instances of org.w3c.dom.Node
    
    * Added support for Map events represented by a java.util.Map including object values

    * New AutoId RFID example for XML event processing, includes simulator for running from the command line 

    * New reference manual chapter on Event Representations
	
    []
    

* July 24, 2006  -  Esper 1.0.0 final production

    * Added support for invoking Java library static methods, invoking user-defined static methods, and defining an auto-import list
    
    * Sort view ext:sort now also allowing multiple columns to sort on
    
    * Added NOT, modulo (%) and SQL string concatention operator (||)

    * New example 'Market Feed Monitor' which showcases rate calculation and fall-off detection. With a simulator to run from a command line. 

    * Build scripts now build Linux tarball; Shell scripts for compiling and running examples reworked.
	
    []


* July 3, 2006  -  Esper 0.9.5 Beta

    * Completed move to the Codehaus open-source repository, see {{{http://esper.codehaus.org/}Esper at Codehaus}}
	
    * Support for "insert into" clause allowing chains of EPL statements and merging of event streams (continuous insertion)
	
    * Capability added to sort output using an "order-by" clause
	
    * Support for bit-wise AND (&), OR (|) and XOR(^) operators
	
    * Bug fix for allowing boolean expression in select clauses, such as "select a and b from MyEvent..."
	
    * New 10-minute tutorial; Transaction example simplified
	
	[]

* June 10, 2006  -  Esper 0.9.1 Beta

    * Beta bug fix release
		
    * Moving to the {{{http://www.codehaus.org/}Codehaus}} open-source repository
	
    * New cool example 'Transaction 3-event challenge' which shows EPL in use for detecting missing events and
computing latency totals overall and grouped. Added scripts for compiling and executing the example.

    * Bug fix for statements that contain only aggregation functions in the select clause that incorrectly posted 
      too many events
    
    * Bug fix for group-by without output rate limiting that incorrectly posted events for past groups
	
	[]

* June 4, 2006  -  Esper 0.9.0 Beta

    * Third beta release
		
    * Planning to move to the {{{http://www.codehaus.org/}Codehaus}} open-source repository
	
    * Added support for output rate limiting based on number of events and time-based, and choice of last or all events

    * Now supporting outer joins for an unlimited number of event streams (was limited to 2 streams)
	
	[]

* April 22, 2006  -  Esper 0.8.5 Beta

    * Second beta release
		
    * Added support for group-by and having
	
    * Added support for aggregation functions max, min, sum, avg, count, median, stddev, avedev;
	  The "distinct" keyword is also supported for each; The "count(*)" syntax is supported.
	  
    * New developers onboarded
	
	[]

* March 23, 2006  -  Esper 0.8.0 Beta

	* Event inheritance and interface implementation support; Added support for interfaces, 
abstract classes, superclasses. E.g. select * from IMyEvent  --- where IMyEvent is an interface or superclass, and event classes that 
implement this interface or extend the superclass match the criteria. Polymorphism of event properties is now also supported.

	* Support for simple, mapped, indexed, nested and any combination of these anywhere where
and event property name is expected. E.g. subordinate[3].address(home).city

	* Refined exception texts to better indicate reason
	
	* Improved documentation
	
	[]

* Feb. 21, 2006 Esper 0.7.5 Alpha

	* Second Alpha release
	
	* Outer joins and IS NULL support in EPL
	
	* Patterns: Use of results in filters, such as "every a=EventX -> every b=EventY(objectID=a.objectID)"
	
	* See history for more detail
		
	[]

* Jan. 16, 2006 Esper 0.7.0 Alpha released

	* Provides early-access to upcoming beta release, for evaluation only
	
	* Full-featured and supported as by current feature list and documentation
	
	[]
